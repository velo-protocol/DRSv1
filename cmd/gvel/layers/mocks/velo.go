// Code generated by MockGen. DO NOT EDIT.
// Source: ./layers/repositories/velo/interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	keypair "github.com/stellar/go/keypair"
	client "github.com/velo-protocol/DRSv1/libs/client"
	reflect "reflect"
)

// MockVeloRepo is a mock of Repository interface
type MockVeloRepo struct {
	ctrl     *gomock.Controller
	recorder *MockVeloRepoMockRecorder
}

// MockVeloRepoMockRecorder is the mock recorder for MockVeloRepo
type MockVeloRepoMockRecorder struct {
	mock *MockVeloRepo
}

// NewMockVeloRepo creates a new mock instance
func NewMockVeloRepo(ctrl *gomock.Controller) *MockVeloRepo {
	mock := &MockVeloRepo{ctrl: ctrl}
	mock.recorder = &MockVeloRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVeloRepo) EXPECT() *MockVeloRepoMockRecorder {
	return m.recorder
}

// Client mocks base method
func (m *MockVeloRepo) Client(keyPair *keypair.Full) client.ClientInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Client", keyPair)
	ret0, _ := ret[0].(client.ClientInterface)
	return ret0
}

// Client indicates an expected call of Client
func (mr *MockVeloRepoMockRecorder) Client(keyPair interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Client", reflect.TypeOf((*MockVeloRepo)(nil).Client), keyPair)
}
